<?xml version="1.0"?>
<ruleset>
    <!-- Scan these files -->
    <file>/members</file>
    <file>/plugins</file>
    <file>/registration</file>
    <file>/templates</file>
    <file>/*.php</file>
    <!-- Scan only PHP files -->
    <arg name="extensions" value="php"/>
    <!-- Show colors in console -->
    <arg value="-colors"/>
    <!-- Show progress -->
    <arg value="p"/>
    <!-- Be quiet -->
    <arg value="q"/>
    <!-- Include source codes in the report -->
    <arg value="s"/>
    <!-- Use HM Coding Standards -->
    <rule ref="vendor/humanmade/coding-standards">
        <!-- Disable all ESLint checks -->
        <exclude name="HM.Debug.ESLint"/>
        <!-- Disable rules we disagree with -->
        <exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName.MemberNotSnakeCase"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName.NotSnakeCaseMemberVar"/>
        <exclude name="WordPress.WP.I18n.MissingTranslatorsComment"/>
        <!-- Disable LayoutOrder until humanmade/coding-standards#5 is fixed -->
        <exclude name="HM.Layout.Order.WrongOrder"/>
    </rule>

    <!-- Re-enable rules we agree with -->
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>

    <!-- Disable Side Effects rule for bootstrapping file, extends WordPress core, cron scripts -->
    <exclude-pattern>/bin/*</exclude-pattern>
    <exclude-pattern>/vendor/*</exclude-pattern>
    <exclude-pattern>/tests/*</exclude-pattern>

    <!-- EM_Events is an object we do not own -->
    <rule ref="WordPress.NamingConventions.ValidVariableName.NotSnakeCase">
        <exclude-pattern>/plugins/events-manager/*</exclude-pattern>
        <exclude-pattern>/functions.php</exclude-pattern>
        <exclude-pattern>/tlpd-actions.php</exclude-pattern>
        <exclude-pattern>/tlpd-events.php</exclude-pattern>
    </rule>
    <rule ref="WordPress.NamingConventions.ValidVariableName.StringNotSnakeCase">
        <exclude-pattern>/plugins/events-manager/*</exclude-pattern>
    </rule>

    <!-- The functions in these files override parent functions (namespacing not an option) -->
    <rule ref="HM.Functions.NamespacedFunctions.MissingNamespace">
        <exclude-pattern>/functions.php</exclude-pattern>
        <exclude-pattern>/tlpd-actions.php</exclude-pattern>
        <exclude-pattern>/tlpd-events.php</exclude-pattern>
    </rule>

    <!-- temp exceptions until id types (string/int) verified not to have negative effect -->
    <rule ref="WordPress.PHP.StrictComparisons.LooseComparison">
        <exclude-pattern>/tlpd-events.php</exclude-pattern>
        <exclude-pattern>/tlpd-actions.php</exclude-pattern>
        <exclude-pattern>/plugins/events-manager/forms/event/location.php</exclude-pattern>
        <exclude-pattern>/plugins/events-manager/placeholders/bookingform.php</exclude-pattern>
    </rule>
    <rule ref="WordPress.PHP.StrictInArray.MissingTrueStrict">
        <exclude-pattern>/plugins/events-manager/buddypress/profile.php</exclude-pattern>
    </rule>

    <!-- include file plus declare functions, doesn't like -->
    <rule ref="PSR1.Files.SideEffects.FoundWithSymbols">
        <exclude-pattern>/functions.php</exclude-pattern>
    </rule>

    <!-- files from another mother -->
    <rule ref="WordPress.CSRF.NonceVerification.NoNonceVerification">
        <exclude-pattern>/plugins/events-manager/tables/events.php</exclude-pattern>
        <exclude-pattern>/plugins/events-manager/forms/event-editor.php</exclude-pattern>
        <exclude-pattern>/plugins/events-manager/buddypress/my-bookings.php</exclude-pattern>
    </rule>
</ruleset>